// tslint:disable
/**
 * FOM API
 * API for FOM backend
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import {
  BaseAPI,
  HttpHeaders,
  throwIfNullOrUndefined,
  encodeURI,
  OperationOpts,
  RawAjaxResponse,
} from '../runtime';
import { InteractionDto, UpdateInteractionDto } from '../models';

export interface InteractionControllerCreateRequest {
  interactionDto: InteractionDto;
}

export interface InteractionControllerFindOneRequest {
  id: number;
}

export interface InteractionControllerRemoveRequest {
  id: number;
}

export interface InteractionControllerUpdateRequest {
  id: number;
  updateInteractionDto: UpdateInteractionDto;
}

/**
 * no description
 */
export class InteractionApi extends BaseAPI {
  /**
   */
  interactionControllerCreate({
    interactionDto,
  }: InteractionControllerCreateRequest): Observable<void>;
  interactionControllerCreate(
    { interactionDto }: InteractionControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  interactionControllerCreate(
    { interactionDto }: InteractionControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(
      interactionDto,
      'interactionDto',
      'interactionControllerCreate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/interaction',
        method: 'POST',
        headers,
        body: interactionDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  interactionControllerFindOne({
    id,
  }: InteractionControllerFindOneRequest): Observable<void>;
  interactionControllerFindOne(
    { id }: InteractionControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  interactionControllerFindOne(
    { id }: InteractionControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'interactionControllerFindOne');

    return this.request<void>(
      {
        url: '/api/interaction/{id}'.replace('{id}', encodeURI(id)),
        method: 'GET',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  interactionControllerRemove({
    id,
  }: InteractionControllerRemoveRequest): Observable<void>;
  interactionControllerRemove(
    { id }: InteractionControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  interactionControllerRemove(
    { id }: InteractionControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'interactionControllerRemove');

    return this.request<void>(
      {
        url: '/api/interaction/{id}'.replace('{id}', encodeURI(id)),
        method: 'DELETE',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  interactionControllerUpdate({
    id,
    updateInteractionDto,
  }: InteractionControllerUpdateRequest): Observable<void>;
  interactionControllerUpdate(
    { id, updateInteractionDto }: InteractionControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  interactionControllerUpdate(
    { id, updateInteractionDto }: InteractionControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'interactionControllerUpdate');
    throwIfNullOrUndefined(
      updateInteractionDto,
      'updateInteractionDto',
      'interactionControllerUpdate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/interaction/{id}'.replace('{id}', encodeURI(id)),
        method: 'PUT',
        headers,
        body: updateInteractionDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }
}
